// Mocks generated by Mockito 5.4.6 from annotations
// in SiKomik/test/domain/repositories/sikomik_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:firebase_auth/firebase_auth.dart' as _i13;
import 'package:mockito/mockito.dart' as _i1;
import 'package:SiKomik/common/enums.dart' as _i14;
import 'package:SiKomik/common/failure.dart' as _i5;
import 'package:SiKomik/domain/entities/chapter_entity.dart' as _i9;
import 'package:SiKomik/domain/entities/comic_detail_entity.dart' as _i8;
import 'package:SiKomik/domain/entities/comic_entity.dart' as _i7;
import 'package:SiKomik/domain/entities/configuration_entity.dart' as _i6;
import 'package:SiKomik/domain/entities/user_comic_chapter_entity.dart' as _i12;
import 'package:SiKomik/domain/entities/user_comic_entity.dart' as _i11;
import 'package:SiKomik/domain/entities/user_entity.dart' as _i10;
import 'package:SiKomik/domain/repositories/sikomik_repository.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SiKomikRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSiKomikRepository extends _i1.Mock implements _i3.SiKomikRepository {
  MockSiKomikRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.ConfigurationEntity>>
      getConfiguration() => (super.noSuchMethod(
            Invocation.method(
              #getConfiguration,
              [],
            ),
            returnValue: _i4
                .Future<_i2.Either<_i5.Failure, _i6.ConfigurationEntity>>.value(
                _FakeEither_0<_i5.Failure, _i6.ConfigurationEntity>(
              this,
              Invocation.method(
                #getConfiguration,
                [],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, _i6.ConfigurationEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.ComicEntity>> getLatestComic({
    required int? page,
    String? q,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLatestComic,
          [],
          {
            #page: page,
            #q: q,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i7.ComicEntity>>.value(
            _FakeEither_0<_i5.Failure, _i7.ComicEntity>(
          this,
          Invocation.method(
            #getLatestComic,
            [],
            {
              #page: page,
              #q: q,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i7.ComicEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i8.ComicDetailEntity>> getComicDetail(
          {required String? path}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getComicDetail,
          [],
          {#path: path},
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i8.ComicDetailEntity>>.value(
                _FakeEither_0<_i5.Failure, _i8.ComicDetailEntity>(
          this,
          Invocation.method(
            #getComicDetail,
            [],
            {#path: path},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i8.ComicDetailEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i9.ChapterEntity>> getChapter(
          {required String? path}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getChapter,
          [],
          {#path: path},
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i9.ChapterEntity>>.value(
                _FakeEither_0<_i5.Failure, _i9.ChapterEntity>(
          this,
          Invocation.method(
            #getChapter,
            [],
            {#path: path},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i9.ChapterEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.ComicEntity>> searchComic(
          {required String? query}) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchComic,
          [],
          {#query: query},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i7.ComicEntity>>.value(
            _FakeEither_0<_i5.Failure, _i7.ComicEntity>(
          this,
          Invocation.method(
            #searchComic,
            [],
            {#query: query},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i7.ComicEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i10.UserEntity>> setUser(
          {required _i10.UserEntity? user}) =>
      (super.noSuchMethod(
        Invocation.method(
          #setUser,
          [],
          {#user: user},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i10.UserEntity>>.value(
            _FakeEither_0<_i5.Failure, _i10.UserEntity>(
          this,
          Invocation.method(
            #setUser,
            [],
            {#user: user},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i10.UserEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i10.UserEntity>> getUserDetail(
          {required String? userId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserDetail,
          [],
          {#userId: userId},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i10.UserEntity>>.value(
            _FakeEither_0<_i5.Failure, _i10.UserEntity>(
          this,
          Invocation.method(
            #getUserDetail,
            [],
            {#userId: userId},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i10.UserEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i11.UserComicEntity>> setUserComic({
    required String? userId,
    required _i11.UserComicEntity? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setUserComic,
          [],
          {
            #userId: userId,
            #data: data,
          },
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i11.UserComicEntity>>.value(
                _FakeEither_0<_i5.Failure, _i11.UserComicEntity>(
          this,
          Invocation.method(
            #setUserComic,
            [],
            {
              #userId: userId,
              #data: data,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i11.UserComicEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i11.UserComicEntity>> getUserComicById({
    required String? userId,
    required String? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserComicById,
          [],
          {
            #userId: userId,
            #id: id,
          },
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i11.UserComicEntity>>.value(
                _FakeEither_0<_i5.Failure, _i11.UserComicEntity>(
          this,
          Invocation.method(
            #getUserComicById,
            [],
            {
              #userId: userId,
              #id: id,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i11.UserComicEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i11.UserComicEntity>>> getFavorites(
          {required String? userId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFavorites,
          [],
          {#userId: userId},
        ),
        returnValue: _i4
            .Future<_i2.Either<_i5.Failure, List<_i11.UserComicEntity>>>.value(
            _FakeEither_0<_i5.Failure, List<_i11.UserComicEntity>>(
          this,
          Invocation.method(
            #getFavorites,
            [],
            {#userId: userId},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i11.UserComicEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i11.UserComicEntity>> getFavoriteById({
    required String? userId,
    required String? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFavoriteById,
          [],
          {
            #userId: userId,
            #id: id,
          },
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i11.UserComicEntity>>.value(
                _FakeEither_0<_i5.Failure, _i11.UserComicEntity>(
          this,
          Invocation.method(
            #getFavoriteById,
            [],
            {
              #userId: userId,
              #id: id,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i11.UserComicEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i12.UserComicChapterEntity>>
      setUserComicChapterRead({
    required String? userId,
    required _i12.UserComicChapterEntity? data,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #setUserComicChapterRead,
              [],
              {
                #userId: userId,
                #data: data,
              },
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.Failure, _i12.UserComicChapterEntity>>.value(
                _FakeEither_0<_i5.Failure, _i12.UserComicChapterEntity>(
              this,
              Invocation.method(
                #setUserComicChapterRead,
                [],
                {
                  #userId: userId,
                  #data: data,
                },
              ),
            )),
          ) as _i4
              .Future<_i2.Either<_i5.Failure, _i12.UserComicChapterEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> setBatchUserComicChapterRead({
    required String? userId,
    required List<_i12.UserComicChapterEntity>? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setBatchUserComicChapterRead,
          [],
          {
            #userId: userId,
            #data: data,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #setBatchUserComicChapterRead,
            [],
            {
              #userId: userId,
              #data: data,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i12.UserComicChapterEntity>>
      getUserComicChapterReadById({
    required String? userId,
    required String? userComicId,
    required String? id,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #getUserComicChapterReadById,
              [],
              {
                #userId: userId,
                #userComicId: userComicId,
                #id: id,
              },
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.Failure, _i12.UserComicChapterEntity>>.value(
                _FakeEither_0<_i5.Failure, _i12.UserComicChapterEntity>(
              this,
              Invocation.method(
                #getUserComicChapterReadById,
                [],
                {
                  #userId: userId,
                  #userComicId: userComicId,
                  #id: id,
                },
              ),
            )),
          ) as _i4
              .Future<_i2.Either<_i5.Failure, _i12.UserComicChapterEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i12.UserComicChapterEntity>>>
      getUserComicChaptersRead({
    required String? userId,
    required String? userComicId,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #getUserComicChaptersRead,
              [],
              {
                #userId: userId,
                #userComicId: userComicId,
              },
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.Failure,
                        List<_i12.UserComicChapterEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i12.UserComicChapterEntity>>(
              this,
              Invocation.method(
                #getUserComicChaptersRead,
                [],
                {
                  #userId: userId,
                  #userComicId: userComicId,
                },
              ),
            )),
          ) as _i4.Future<
              _i2.Either<_i5.Failure, List<_i12.UserComicChapterEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i13.UserCredential>> login({
    String? email,
    String? password,
    required _i14.LoginType? type,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [],
          {
            #email: email,
            #password: password,
            #type: type,
          },
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i13.UserCredential>>.value(
                _FakeEither_0<_i5.Failure, _i13.UserCredential>(
          this,
          Invocation.method(
            #login,
            [],
            {
              #email: email,
              #password: password,
              #type: type,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i13.UserCredential>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i13.UserCredential>> register({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i13.UserCredential>>.value(
                _FakeEither_0<_i5.Failure, _i13.UserCredential>(
          this,
          Invocation.method(
            #register,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i13.UserCredential>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i13.User?>> getUser() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i13.User?>>.value(
            _FakeEither_0<_i5.Failure, _i13.User?>(
          this,
          Invocation.method(
            #getUser,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i13.User?>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i4.Stream<_i13.User?>>> streamUser() =>
      (super.noSuchMethod(
        Invocation.method(
          #streamUser,
          [],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i4.Stream<_i13.User?>>>.value(
                _FakeEither_0<_i5.Failure, _i4.Stream<_i13.User?>>(
          this,
          Invocation.method(
            #streamUser,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i4.Stream<_i13.User?>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #logout,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);
}
